#!/usr/bin/env python
import libbaltcalc
import pygame


#used to get linear adress point number in decimal (for example for fiding an adress in the rom)
def numstruct(code):
	strut1=(libbaltcalc.BTTODEC(code))
	strut2=(strut1 + 365)
	#print strut2
	return strut2

#used by the buzzer (do not use for 6 trit numtructs. use normal numstruct for that!)
def buzznumstruct5(code):
	strut1=(libbaltcalc.BTTODEC(code))
	strut2=(strut1 + 122)
	#print strut2
	return strut2
	
def drawnumstruct3(code):
	strut1=(libbaltcalc.BTTODEC(code))
	strut2=(strut1 + 13)
	#print strut2
	return strut2

def drawnumstruct2(code):
	strut1=(libbaltcalc.BTTODEC(code))
	strut2=(strut1 + 4)
	#print strut2
	return strut2
#raster draw support
def dollytell(lookupcode):
	if lookupcode=="--":
		return("0")
	if lookupcode=="-0":
		return("32")
	if lookupcode=="-+":
		return("64")
	if lookupcode=="0-":
		return("96")
	if lookupcode=="00":
		return("127")
	if lookupcode=="0+":
		return("159")
	if lookupcode=="+-":
		return("191")
	if lookupcode=="+0":
		return("223")
	if lookupcode=="++":
		return("255")


def colorfind(CODE):
	REDBT = (CODE[0] + CODE[1])
	GRNBT = (CODE[2] + CODE[3])
	BLUBT = (CODE[4] + CODE[5])
	REDBIN = (dollytell(REDBT))
	GRNBIN = (dollytell(GRNBT))
	BLUBIN = (dollytell(BLUBT))
	#NAME = datalist
	return((int(REDBIN), int(GRNBIN), int(BLUBIN)))

#returns pygame rectangle from 2 points used to draw vector filled rectangles
def makerectbipoint(Jx1, Jy1, Jx2, Jy2):
	if Jx1>Jx2:
		sizeX=(Jx1-Jx2)
		xval=Jx2
	else:
		sizeX=(Jx2-Jx1)
		xval=Jx1
	if Jy1>Jy2:
		yval=Jy2
		sizeY=(Jy1-Jy2)
	else:
		sizeY=(Jy2-Jy1)
		yval=Jy1
	sizeY += 1
	sizeX += 1
	return(pygame.Rect((xval, yval), (sizeX, sizeY)))

#more intelegent truncation function (used in the math functions for example)
def trunkto6(code):
	codecnt=0
	for fel in code:
		codecnt +=1
	if codecnt<6:
		if codecnt==5:
			return("0" + code)
		if codecnt==4:
			return("00" + code)
		if codecnt==3:
			return("000" + code)
		if codecnt==2:
			return("0000" + code)
		if codecnt==1:
			return("00000" + code)
	#print code
	#code=libbaltcalc.BTINVERT(code)
	return((code[0]) + (code[1]) + (code[2]) + (code[3]) + (code[4]) + (code[5]))

#print(trunkto6("---0+++"))
#print(trunkto6("--0+++"))
#print(trunkto6("-0+++"))
#print(trunkto6("0+++"))
#print(trunkto6("+++"))
#print(trunkto6("++"))
#print(trunkto6("+"))

def abtslackline(receveabt, linetext):
	interx=[(receveabt[1]), (receveabt[2]),(receveabt[3]), (receveabt[4]), (receveabt[5]), (receveabt[6]), (receveabt[7]), (receveabt[8]), (receveabt[9]), (receveabt[10]), (receveabt[11]), (receveabt[12]), (receveabt[13]), (receveabt[14]), (receveabt[15]), (receveabt[16]), (receveabt[17]), (receveabt[18]), (receveabt[19]), (receveabt[20]), (receveabt[21]), (receveabt[22]), (receveabt[23]), (receveabt[24]), (receveabt[25]),(receveabt[26]), (linetext)]
	return interx

def abtcharblit(receveabtb, charblit):
	if charblit=="\n":
		receveabtb=abtslackline(receveabtb, "")
	else:
		charnum=0
		curr=receveabtb[26]
		for f in curr:
			if charnum==36:
				receveabtb=abtslackline(receveabtb, "")
			charnum += 1
		receveabtb[26]=((receveabtb[26]) + charblit)
	return(receveabtb)

#keep these lists at the end of the library! no reason, just so someone with 
#word wrap isnt scrolling forever :p
#IO Address list for buffer clear (no longer used)
chklist = ["+00+--", "+00+-0", "+00+-+", "+00+0-", "+00+00", "+00+0+", "+00++-", "+00++0", "+00+++", "+0+---", "+0+--0", "+0+--+", "+0+-0-", "+0+-00", "+0+-0+", "+0+-+-", "+0+-+0", "+0+-++", "+0+0--", "+0+0-0", "+0+0-+", "+0+00-", "+0+000", "+0+00+", "+0+0+-", "+0+0+0", "+0+0++", "+0++--", "+0++-0", "+0++-+", "+0++0-", "+0++00", "+0++0+", "+0+++-", "+0+++0", "+0++++", "++----", "++---0", "++---+", "++--0-", "++--00", "++--0+", "++--+-", "++--+0", "++--++", "++-0--", "++-0-0", "++-0-+", "++-00-", "++-000", "++-00+", "++-0+-", "++-0+0", "++-0++", "++-+--", "++-+-0", "++-+-+", "++-+0-", "++-+00", "++-+0+", "++-++-", "++-++0", "++-+++", "++0---", "++0--0", "++0--+", "++0-0-", "++0-00", "++0-0+", "++0-+-", "++0-+0", "++0-++", "++00--", "++00-0", "++00-+", "++000-", "++0000", "++000+", "++00+-", "++00+0", "++00++", "++0+--", "++0+-0", "++0+-+", "++0+0-", "++0+00", "++0+0+", "++0++-", "++0++0", "++0+++", "+++---", "+++--0", "+++--+", "+++-0-", "+++-00", "+++-0+", "+++-+-", "+++-+0", "+++-++", "+++0--", "+++0-0", "+++0-+", "+++00-", "+++000", "+++00+", "+++0+-", "+++0+0", "+++0++", "++++--", "++++-0", "++++-+", "++++0-", "++++00", "++++0+", "+++++-", "+++++0", "++++++"]

#main IOBUS List (used at startup to build RAMbank dictionary
calmlst = ["------", "-----0", "-----+", "----0-", "----00", "----0+", "----+-", "----+0", "----++", "---0--", "---0-0", "---0-+", "---00-", "---000", "---00+", "---0+-", "---0+0", "---0++", "---+--", "---+-0", "---+-+", "---+0-", "---+00", "---+0+", "---++-", "---++0", "---+++", "--0---", "--0--0", "--0--+", "--0-0-", "--0-00", "--0-0+", "--0-+-", "--0-+0", "--0-++", "--00--", "--00-0", "--00-+", "--000-", "--0000", "--000+", "--00+-", "--00+0", "--00++", "--0+--", "--0+-0", "--0+-+", "--0+0-", "--0+00", "--0+0+", "--0++-", "--0++0", "--0+++", "--+---", "--+--0", "--+--+", "--+-0-", "--+-00", "--+-0+", "--+-+-", "--+-+0", "--+-++", "--+0--", "--+0-0", "--+0-+", "--+00-", "--+000", "--+00+", "--+0+-", "--+0+0", "--+0++", "--++--", "--++-0", "--++-+", "--++0-", "--++00", "--++0+", "--+++-", "--+++0", "--++++", "-0----", "-0---0", "-0---+", "-0--0-", "-0--00", "-0--0+", "-0--+-", "-0--+0", "-0--++", "-0-0--", "-0-0-0", "-0-0-+", "-0-00-", "-0-000", "-0-00+", "-0-0+-", "-0-0+0", "-0-0++", "-0-+--", "-0-+-0", "-0-+-+", "-0-+0-", "-0-+00", "-0-+0+", "-0-++-", "-0-++0", "-0-+++", "-00---", "-00--0", "-00--+", "-00-0-", "-00-00", "-00-0+", "-00-+-", "-00-+0", "-00-++", "-000--", "-000-0", "-000-+", "-0000-", "-00000", "-0000+", "-000+-", "-000+0", "-000++", "-00+--", "-00+-0", "-00+-+", "-00+0-", "-00+00", "-00+0+", "-00++-", "-00++0", "-00+++", "-0+---", "-0+--0", "-0+--+", "-0+-0-", "-0+-00", "-0+-0+", "-0+-+-", "-0+-+0", "-0+-++", "-0+0--", "-0+0-0", "-0+0-+", "-0+00-", "-0+000", "-0+00+", "-0+0+-", "-0+0+0", "-0+0++", "-0++--", "-0++-0", "-0++-+", "-0++0-", "-0++00", "-0++0+", "-0+++-", "-0+++0", "-0++++", "-+----", "-+---0", "-+---+", "-+--0-", "-+--00", "-+--0+", "-+--+-", "-+--+0", "-+--++", "-+-0--", "-+-0-0", "-+-0-+", "-+-00-", "-+-000", "-+-00+", "-+-0+-", "-+-0+0", "-+-0++", "-+-+--", "-+-+-0", "-+-+-+", "-+-+0-", "-+-+00", "-+-+0+", "-+-++-", "-+-++0", "-+-+++", "-+0---", "-+0--0", "-+0--+", "-+0-0-", "-+0-00", "-+0-0+", "-+0-+-", "-+0-+0", "-+0-++", "-+00--", "-+00-0", "-+00-+", "-+000-", "-+0000", "-+000+", "-+00+-", "-+00+0", "-+00++", "-+0+--", "-+0+-0", "-+0+-+", "-+0+0-", "-+0+00", "-+0+0+", "-+0++-", "-+0++0", "-+0+++", "-++---", "-++--0", "-++--+", "-++-0-", "-++-00", "-++-0+", "-++-+-", "-++-+0", "-++-++", "-++0--", "-++0-0", "-++0-+", "-++00-", "-++000", "-++00+", "-++0+-", "-++0+0", "-++0++", "-+++--", "-+++-0", "-+++-+", "-+++0-", "-+++00", "-+++0+", "-++++-", "-++++0", "-+++++", "0-----", "0----0", "0----+", "0---0-", "0---00", "0---0+", "0---+-", "0---+0", "0---++", "0--0--", "0--0-0", "0--0-+", "0--00-", "0--000", "0--00+", "0--0+-", "0--0+0", "0--0++", "0--+--", "0--+-0", "0--+-+", "0--+0-", "0--+00", "0--+0+", "0--++-", "0--++0", "0--+++", "0-0---", "0-0--0", "0-0--+", "0-0-0-", "0-0-00", "0-0-0+", "0-0-+-", "0-0-+0", "0-0-++", "0-00--", "0-00-0", "0-00-+", "0-000-", "0-0000", "0-000+", "0-00+-", "0-00+0", "0-00++", "0-0+--", "0-0+-0", "0-0+-+", "0-0+0-", "0-0+00", "0-0+0+", "0-0++-", "0-0++0", "0-0+++", "0-+---", "0-+--0", "0-+--+", "0-+-0-", "0-+-00", "0-+-0+", "0-+-+-", "0-+-+0", "0-+-++", "0-+0--", "0-+0-0", "0-+0-+", "0-+00-", "0-+000", "0-+00+", "0-+0+-", "0-+0+0", "0-+0++", "0-++--", "0-++-0", "0-++-+", "0-++0-", "0-++00", "0-++0+", "0-+++-", "0-+++0", "0-++++", "00----", "00---0", "00---+", "00--0-", "00--00", "00--0+", "00--+-", "00--+0", "00--++", "00-0--", "00-0-0", "00-0-+", "00-00-", "00-000", "00-00+", "00-0+-", "00-0+0", "00-0++", "00-+--", "00-+-0", "00-+-+", "00-+0-", "00-+00", "00-+0+", "00-++-", "00-++0", "00-+++", "000---", "000--0", "000--+", "000-0-", "000-00", "000-0+", "000-+-", "000-+0", "000-++", "0000--", "0000-0", "0000-+", "00000-", "000000", "00000+", "0000+-", "0000+0", "0000++", "000+--", "000+-0", "000+-+", "000+0-", "000+00", "000+0+", "000++-", "000++0", "000+++", "00+---", "00+--0", "00+--+", "00+-0-", "00+-00", "00+-0+", "00+-+-", "00+-+0", "00+-++", "00+0--", "00+0-0", "00+0-+", "00+00-", "00+000", "00+00+", "00+0+-", "00+0+0", "00+0++", "00++--", "00++-0", "00++-+", "00++0-", "00++00", "00++0+", "00+++-", "00+++0", "00++++", "0+----", "0+---0", "0+---+", "0+--0-", "0+--00", "0+--0+", "0+--+-", "0+--+0", "0+--++", "0+-0--", "0+-0-0", "0+-0-+", "0+-00-", "0+-000", "0+-00+", "0+-0+-", "0+-0+0", "0+-0++", "0+-+--", "0+-+-0", "0+-+-+", "0+-+0-", "0+-+00", "0+-+0+", "0+-++-", "0+-++0", "0+-+++", "0+0---", "0+0--0", "0+0--+", "0+0-0-", "0+0-00", "0+0-0+", "0+0-+-", "0+0-+0", "0+0-++", "0+00--", "0+00-0", "0+00-+", "0+000-", "0+0000", "0+000+", "0+00+-", "0+00+0", "0+00++", "0+0+--", "0+0+-0", "0+0+-+", "0+0+0-", "0+0+00", "0+0+0+", "0+0++-", "0+0++0", "0+0+++", "0++---", "0++--0", "0++--+", "0++-0-", "0++-00", "0++-0+", "0++-+-", "0++-+0", "0++-++", "0++0--", "0++0-0", "0++0-+", "0++00-", "0++000", "0++00+", "0++0+-", "0++0+0", "0++0++", "0+++--", "0+++-0", "0+++-+", "0+++0-", "0+++00", "0+++0+", "0++++-", "0++++0", "0+++++", "+-----", "+----0", "+----+", "+---0-", "+---00", "+---0+", "+---+-", "+---+0", "+---++", "+--0--", "+--0-0", "+--0-+", "+--00-", "+--000", "+--00+", "+--0+-", "+--0+0", "+--0++", "+--+--", "+--+-0", "+--+-+", "+--+0-", "+--+00", "+--+0+", "+--++-", "+--++0", "+--+++", "+-0---", "+-0--0", "+-0--+", "+-0-0-", "+-0-00", "+-0-0+", "+-0-+-", "+-0-+0", "+-0-++", "+-00--", "+-00-0", "+-00-+", "+-000-", "+-0000", "+-000+", "+-00+-", "+-00+0", "+-00++", "+-0+--", "+-0+-0", "+-0+-+", "+-0+0-", "+-0+00", "+-0+0+", "+-0++-", "+-0++0", "+-0+++", "+-+---", "+-+--0", "+-+--+", "+-+-0-", "+-+-00", "+-+-0+", "+-+-+-", "+-+-+0", "+-+-++", "+-+0--", "+-+0-0", "+-+0-+", "+-+00-", "+-+000", "+-+00+", "+-+0+-", "+-+0+0", "+-+0++", "+-++--", "+-++-0", "+-++-+", "+-++0-", "+-++00", "+-++0+", "+-+++-", "+-+++0", "+-++++", "+0----", "+0---0", "+0---+", "+0--0-", "+0--00", "+0--0+", "+0--+-", "+0--+0", "+0--++", "+0-0--", "+0-0-0", "+0-0-+", "+0-00-", "+0-000", "+0-00+", "+0-0+-", "+0-0+0", "+0-0++", "+0-+--", "+0-+-0", "+0-+-+", "+0-+0-", "+0-+00", "+0-+0+", "+0-++-", "+0-++0", "+0-+++", "+00---", "+00--0", "+00--+", "+00-0-", "+00-00", "+00-0+", "+00-+-", "+00-+0", "+00-++", "+000--", "+000-0", "+000-+", "+0000-", "+00000", "+0000+", "+000+-", "+000+0", "+000++", "+00+--", "+00+-0", "+00+-+", "+00+0-", "+00+00", "+00+0+", "+00++-", "+00++0", "+00+++", "+0+---", "+0+--0", "+0+--+", "+0+-0-", "+0+-00", "+0+-0+", "+0+-+-", "+0+-+0", "+0+-++", "+0+0--", "+0+0-0", "+0+0-+", "+0+00-", "+0+000", "+0+00+", "+0+0+-", "+0+0+0", "+0+0++", "+0++--", "+0++-0", "+0++-+", "+0++0-", "+0++00", "+0++0+", "+0+++-", "+0+++0", "+0++++", "++----", "++---0", "++---+", "++--0-", "++--00", "++--0+", "++--+-", "++--+0", "++--++", "++-0--", "++-0-0", "++-0-+", "++-00-", "++-000", "++-00+", "++-0+-", "++-0+0", "++-0++", "++-+--", "++-+-0", "++-+-+", "++-+0-", "++-+00", "++-+0+", "++-++-", "++-++0", "++-+++", "++0---", "++0--0", "++0--+", "++0-0-", "++0-00", "++0-0+", "++0-+-", "++0-+0", "++0-++", "++00--", "++00-0", "++00-+", "++000-", "++0000", "++000+", "++00+-", "++00+0", "++00++", "++0+--", "++0+-0", "++0+-+", "++0+0-", "++0+00", "++0+0+", "++0++-", "++0++0", "++0+++", "+++---", "+++--0", "+++--+", "+++-0-", "+++-00", "+++-0+", "+++-+-", "+++-+0", "+++-++", "+++0--", "+++0-0", "+++0-+", "+++00-", "+++000", "+++00+", "+++0+-", "+++0+0", "+++0++", "++++--", "++++-0", "++++-+", "++++0-", "++++00", "++++0+", "+++++-", "+++++0", "++++++"]
